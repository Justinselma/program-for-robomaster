C51 COMPILER V9.01   DISPLAY                                                               08/24/2018 00:21:12 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN display.OBJ
COMPILER INVOKED BY: G:\KI\C51\BIN\C51.EXE display.c BROWSE INCDIR(..\Documents) DEBUG OBJECTEXTEND

line level    source

   1          #include "display.h"
   2          void modess(void)                                                               //实现0.5s亮灭闪烁 时钟闪烁函数            *
   3          {
   4   1              P2 = 0x24;         //00100100
   5   1              P0 = 0xbf;         //10111111
   6   1              delayms(5);
   7   1                      
   8   1              if((reset==0) && (t0>9))        P2 = 0;
   9   1              else    P2 = dliang[0];
  10   1              P0 = xliang[add[0]];
  11   1              delayms(5);
  12   1      
  13   1               if((reset==0) && (t0>9))       P2 = 0;
  14   1              else    P2 = dliang[1]; 
  15   1              P0 = xliang[add[1]];
  16   1              delayms(5);
  17   1      
  18   1              if((reset==1) && (t0>9))        P2 = 0;
  19   1              else    P2 = dliang[2];
  20   1              P0 = xliang[add[2]];
  21   1              delayms(5);
  22   1      
  23   1              if((reset==1) && (t0>9))        P2 = 0;
  24   1              else    P2 = dliang[3];
  25   1              P0 = xliang[add[3]];
  26   1              delayms(5);
  27   1      
  28   1              if((reset==2) && (t0>9))        P2 = 0;
  29   1              else    P2 = dliang[4];
  30   1              P0 = xliang[add[4]];
  31   1              delayms(5);
  32   1      
  33   1              if((reset==2) && (t0>9))        P2 = 0;
  34   1              else    P2 = dliang[5];
  35   1              P0 = xliang[add[5]];
  36   1              delayms(5);
  37   1      }
  38          
  39          void xmodess(void)                                                              //实现0.5s亮灭闪烁 闹钟闪烁函数           *
  40          {
  41   1              P2 = 0x24;         //00100100
  42   1              P0 = 0xbf;         //10111111
  43   1              delayms(5);
  44   1                      
  45   1              if((reset==0) && (t0>9))        P2 = 0;
  46   1              else    P2 = dliang[0];
  47   1              P0 = xliang[bdd[0]];
  48   1              delayms(5);
  49   1      
  50   1               if((reset==0) && (t0>9))       P2 = 0;
  51   1              else    P2 = dliang[1]; 
  52   1              P0 = xliang[bdd[1]];
  53   1              delayms(5);
  54   1      
  55   1              if((reset==1) && (t0>9))        P2 = 0;
C51 COMPILER V9.01   DISPLAY                                                               08/24/2018 00:21:12 PAGE 2   

  56   1              else    P2 = dliang[2];
  57   1              P0 = xliang[bdd[2]];
  58   1              delayms(5);
  59   1      
  60   1              if((reset==1) && (t0>9))        P2 = 0;
  61   1              else    P2 = dliang[3];
  62   1              P0 = xliang[bdd[3]];
  63   1              delayms(5);
  64   1      
  65   1              if((reset==2) && (t0>9))        P2 = 0;
  66   1              else    P2 = dliang[4];
  67   1              P0 = xliang[bdd[4]];
  68   1              delayms(5);
  69   1      
  70   1              if((reset==2) && (t0>9))        P2 = 0;
  71   1              else    P2 = dliang[5];
  72   1              P0 = xliang[bdd[5]];
  73   1              delayms(5);
  74   1      }
  75          
  76          void mode(void)                  //mode 扫描函数                                        *
  77          {
  78   1              for(i=0;i<6;i++)
  79   1              {
  80   2                      P2=dliang[i];
  81   2                      P0=xliang[add[i]];
  82   2                      delayms(5);
  83   2                      /*      P0=0xff; */
  84   2      
  85   2      
  86   2              }
  87   1              /*              //亮出  0     1    2     3        4       5        6   7        8        9
  88   1              uchar xliang[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};                //段选码 小亮 共阳   P
             -0
  89   1              uchar dliang[]={0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01}; */             //位选码 大亮    P2
  90   1                                      //第8     7        6      5              4              3          2     1       个灯亮                           
  91   1          P2=0x24;            //改为24          原为c0
  92   1              P0=0xbf;
  93   1              delayms(5);     
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    494    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
